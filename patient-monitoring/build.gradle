plugins {
    id 'application'
    id "net.ltgt.errorprone" version "4.0.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.8.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'

    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.16'
    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.7'

    // https://mvnrepository.com/artifact/io.javalin/javalin
    implementation group: 'io.javalin', name: 'javalin', version: '6.3.0'
    // https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp
    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '4.12.0'

    // https://mvnrepository.com/artifact/com.google.errorprone/error_prone_core
    errorprone("com.google.errorprone:error_prone_core:2.31.0")
}
// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.magicalpipelines.App'
}

task runFirst(type: JavaExec) {
  main = 'com.magicalpipelines.App' 
  classpath = sourceSets.main.runtimeClasspath 
  systemProperties = [
    'host': 'localhost',
    'port': '7000',
    'stateDir': '/tmp/kafka-streams'
  ]
}

task runSecond(type: JavaExec) {
  main = 'com.magicalpipelines.App'
  classpath = sourceSets.main.runtimeClasspath 
  systemProperties = [
    'host': 'localhost',
    'port': '7100',
    'stateDir': '/tmp/kafka-streams2'
  ]
}

run.dependsOn runFirst

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
