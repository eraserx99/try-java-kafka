plugins {
    id 'application'
    id "net.ltgt.errorprone" version "4.0.1"
    id "com.github.davidmc24.gradle.plugin.avro" version "1.9.1"
}

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()

    maven {
        url "https://packages.confluent.io/maven"
    }
}

dependencies {
    // Use JUnit Jupiter for testing.
    testImplementation libs.junit.jupiter

    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // This dependency is used by the application.
    implementation libs.guava

    // https://mvnrepository.com/artifact/org.apache.kafka/kafka-streams
    implementation group: 'org.apache.kafka', name: 'kafka-streams', version: '3.8.0'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.11.0'

    // https://mvnrepository.com/artifact/io.grpc/grpc-netty-shaded
    implementation group: 'io.grpc', name: 'grpc-netty-shaded', version: '1.66.0'

    implementation group: 'org.apache.avro', name: 'avro', version: '1.11.0'
    implementation group: 'com.mitchseymour', name: 'kafka-registryless-avro-serdes', version: '1.0.0'

    // https://mvnrepository.com/artifact/com.google.cloud/google-cloud-language
    implementation group: 'com.google.cloud', name: 'google-cloud-language', version: '2.33.0'

    // https://mvnrepository.com/artifact/com.google.cloud/google-cloud-translate
    implementation group: 'com.google.cloud', name: 'google-cloud-translate', version: '2.48.0'

    // https://mvnrepository.com/artifact/io.confluent/kafka-streams-avro-serde
    implementation('io.confluent:kafka-streams-avro-serde:7.7.0') {
        exclude group: 'org.apache.kafka', module: 'kafka-clients'
    }

    // https://mvnrepository.com/artifact/ch.qos.logback/logback-classic
    implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.7'

    // https://mvnrepository.com/artifact/com.google.errorprone/error_prone_core
    errorprone("com.google.errorprone:error_prone_core:2.31.0")
}

avro {
    fieldVisibility = 'PRIVATE'
    stringType = "String"
    outputCharacterEncoding = "UTF-8"
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.withType(JavaCompile).configureEach {
    options.errorprone {
        disableWarningsInGeneratedCode = true
        excludedPaths = '.*/build/generated/.*'
    }
}

task runDSL(type: JavaExec) {
    mainClass = 'com.example.DslExample'
    classpath sourceSets.main.runtimeClasspath
}

task runProcessorAPI(type: JavaExec) {
    mainClass = 'com.example.ProcessorApiExample'
    classpath sourceSets.main.runtimeClasspath
}

application {
    // Define the main class for the application.
    mainClass = 'com.example.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}
